[tool.poetry]
name = "traffic"
homepage = "https://github.com/xoolive/traffic/"
documentation = "https://traffic-viz.github.io/"
version = "0.0.0"
description = "A toolbox for manipulating and analysing air traffic data"
authors = ["Xavier Olive <git@xoolive.org>"]
license = "MIT"
readme = "readme.md"
classifiers = [
  "Development Status :: 5 - Production/Stable",
  "Intended Audience :: Information Technology",
  "Intended Audience :: Science/Research",
  "Operating System :: Microsoft :: Windows",
  "Operating System :: MacOS",
  "Operating System :: POSIX :: Linux",
  "Topic :: Scientific/Engineering :: Artificial Intelligence",
  "Topic :: Scientific/Engineering :: GIS",
  "Topic :: Scientific/Engineering :: Information Analysis",
  "Topic :: Scientific/Engineering :: Visualization",
  "Topic :: Software Development :: Libraries",
  "License :: OSI Approved :: MIT License",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Typing :: Typed",
]
include = [
  "license.md",
  "traffic.conf",
  "py.typed",
  ".dat",
  "*.json.*",
  ".onnx",
  "allft_fields.txt",
]

[tool.poetry-dynamic-versioning]
enable = true
bump = true
metadata = false

[tool.poetry.scripts]
traffic = 'traffic.console:main'

[tool.poetry.plugins."traffic.plugins"]
Bluesky = "traffic.plugins.bluesky"
CesiumJS = "traffic.plugins.cesiumjs"

[tool.poetry.dependencies]
python = ">=3.10,<4.0"
impunity = ">=1.0.4"
# impunity = { path = "../impunity", develop = true}
pitot = ">=0.3.1"
# pitot = { path = "../pitot", develop = true }
cartes = ">=0.8.2"
# cartes = { path = "../cartes", develop = true }
pyopensky = ">=2.11"
# pyopensky = { path = "../pyopensky", develop = true }
httpx = ">=0.27.2"
rs1090 = ">=0.3.0"
# rs1090 = { path = "../rs1090/python", develop = true }
openap = ">=2.0"
# openap = { path = "../openap", develop = true }
metar = ">=1.8"
pyarrow = ">=16.0"
typing-extensions = ">=4.2"
py7zr = "^0.22.0"
rich = "^13.9.3"

# onnxruntime is usually late to release, although available on conda-forge
# 1.18.1 is the first release to properly address numpy 2.0
onnxruntime = { version = ">=1.19.2", python = "<3.13" }

# -- Optional dependencies --
xarray = { version = ">=2024.9.0", optional = true }
scikit-learn = { version = ">=1.5.2", optional = true }

altair = { version = ">=5.4.1", optional = true }
ipywidgets = { version = ">=8.1.5", optional = true }
ipyleaflet = { version = ">=0.18,<0.20", optional = true }
lonboard = { version = ">=0.8,<0.10", optional = true }
plotly = { version = ">=5.24.1", optional = true }

# -- Spark --
pyspark = { version = ">=3.5.3", optional = true }

[tool.poetry.extras]
full = [
  "xarray",
  "scikit-learn",
  "pyspark",
  "altair",
  "ipyleaflet",
  "ipywidgets",
  "lonboard",
  "plotly",
]
altair = ["altair"]
plotly = ["plotly"]
leaflet = ["ipyleaflet", "ipywidgets"]
lonboard = ["lonboard"]
spark = ["pyspark"]

[tool.poetry.group.dev.dependencies]
pre-commit = "^3.8.0"
mypy = "^1.11.2"
ruff = "^0.6.8"
Sphinx = "^7.4.7"
sphinx-rtd-theme = "^2.0.0"         # requires Sphinx < 8
jupyter_sphinx = "^0.5.3"
sphinx-autodoc-typehints = "^2.2.3" # latest version requires Sphinx > 8
pytest = "^8.3.3"
pytest-cov = "^5.0.0"
pytest-timeout = "^2.1"
codecov = "^2.1.11"
ipykernel = "^6.25.0"
# pandas-stubs = { version = "^2.1.4" }
types-pkg-resources = "^0.1.3"


[build-system]
requires = ["poetry-core>=1.0.0", "poetry-dynamic-versioning"]
build-backend = "poetry_dynamic_versioning.backend"

[tool.ruff]
line-length = 80
target-version = "py310"

[tool.ruff.lint]
select = [
  "E",
  "W",      # pycodestyle
  "F",      # pyflakes
  "I",      # isort
  "NPY",    # numpy
  "NPY201", # numpy
  # "PD",  # pandas
  "DTZ", # flake8-datetimez
  "RUF",
]

[tool.ruff.lint.isort]
known-first-party = ["numpy", "pandas", "pyproj", "shapely"]

[tool.mypy]
python_version = "3.10"
platform = "posix"

color_output = true
pretty = true
show_column_numbers = true
strict = true
check_untyped_defs = true
ignore_missing_imports = true
warn_no_return = true
warn_redundant_casts = true
warn_unused_configs = true
warn_unused_ignores = true


[tool.pytest.ini_options]
addopts = "--log-level=INFO --color=yes --doctest-modules --doctest-report ndiff"
testpaths = [
  "src/traffic/core/intervals.py",
  "src/traffic/core/time.py",
  "src/traffic/data/basic/",
  "src/traffic/data/datasets/",
  "tests",
]
doctest_optionflags = ["NORMALIZE_WHITESPACE", "ELLIPSIS", "NUMBER"]
# -- Visualization --
