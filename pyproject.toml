[tool.poetry]
name = "traffic"
homepage = "https://github.com/xoolive/traffic/"
documentation = "https://traffic-viz.github.io/"
version = "2.8.1"
description = "A toolbox for manipulating and analysing air traffic data"
authors = ["Xavier Olive <git@xoolive.org>"]
license = "MIT"
readme = "readme.md"
classifiers = [
  "Development Status :: 5 - Production/Stable",
  "Intended Audience :: Information Technology",
  "Intended Audience :: Science/Research",
  "Operating System :: Microsoft :: Windows",
  "Operating System :: MacOS",
  "Operating System :: POSIX :: Linux",
  "Topic :: Scientific/Engineering :: Artificial Intelligence",
  "Topic :: Scientific/Engineering :: GIS",
  "Topic :: Scientific/Engineering :: Information Analysis",
  "Topic :: Scientific/Engineering :: Visualization",
  "Topic :: Software Development :: Libraries",
  "License :: OSI Approved :: MIT License",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Typing :: Typed",
]
include = [
  "license.md",
  "traffic.conf",
  "py.typed",
  "*.json.*",
  ".xml",
  ".onnx",
  "allft_fields.txt"
]

[project.urls]
Releases = "https://github.com/xoolive/traffic/releases"
Gitter = "https://gitter.im/xoolive/traffic"
Issues = "https://github.com/xoolive/traffic/issues"

[tool.poetry.scripts]
traffic = 'traffic.console:main'

[tool.poetry.plugins."traffic.plugins"]
Bluesky = "traffic.plugins.bluesky"
CesiumJS = "traffic.plugins.cesiumjs"
Kepler = "traffic.plugins.kepler"

[tool.poetry.dependencies]
python = ">=3.8,<3.11"
numpy = "^1.21"
scipy = "^1.7"
matplotlib = "^3.4.2"
pandas = "^1.2.4"
pitot = "^0.2.0"
pyproj = "^3.1.0"
Cartopy = ">=0.19.0,<1.0.0"
cartes = ">=0.5,<1.0"
Shapely = "^1.8"
requests = "^2.25.1"
requests-pkcs12 = "^1.10"
pyOpenSSL = "^22.0"
appdirs = "^1.4.4"
paramiko = "^2.7.2"
typing-extensions = ">=4.2.0,<5.0.0"
altair = "^4.1.0"
ipywidgets = "^7.6.3"
ipyleaflet = ">=0.14.0,<1.0.0"
tqdm = "^4.61.1"
pyModeS = "^2.9"
openap = "^1.1"
pyarrow = ">=4.0"
onnxruntime = "^1.12.1"
beautifulsoup4 = "^4.9.3"
lxml = "^4.6.3"
metar = "^1.8.0"
rich = ">=11.2.0"
click = ">=8.1.2"
cryptography = "<37.0.0"  # https://github.com/nextstrain/cli/issues/171
xarray = { version = ">=0.18.2,<2023.0.0", optional = true }
libarchive = { version = ">=0.4.7,<1.0.0", optional = true }
scikit-learn = { version = "^1.0", optional = true }
fastkml = { version = ">=0.11,<1.0.0", optional = true }
keplergl = { version = ">=0.3.2,<1.0.0", optional = true }
textual = { version = ">=0.1.17", optional = true }
Flask = { version = "^2.1.1", optional = true }
Flask-Cors = {version = "^3.0.10", optional = true}
waitress = {version = "^2.1.1", optional = true}
pyspark = { version = "^3.3.0", optional = true}

[tool.poetry.extras]
all = ["xarray", "libarchive", "scikit-learn", "textual"]
web = ["Flask", "Flask-Cors", "waitress"]
plugins = ["fastkml", "keplergl"]
spark = ["pyspark"]

[tool.poetry.dev-dependencies]
pre-commit = "^2.13.0"
isort = "^5.9.1"
black = ">=21.6"
flake8 = "^5.0"
mypy = ">=0.981"
Sphinx = "^5.1"
sphinx-rtd-theme = ">=0.5.2"
jupyter_sphinx = ">=0.3.2"
sphinx-autodoc-typehints = "^1.17"
altair-saver = ">=0.5.0"
pytest = "^7.1"
pytest-cov = "^4.0"
pytest-timeout = "^2.1.0"
codecov = "^2.1.11"
types-pkg-resources = ">=0.1.3"
types-requests = "^2.25.0"
types-paramiko = ">=0.1.7"
types-pyOpenSSL = "^22.0"
types-flask = "^1.1.6"
types-waitress = "^2.0.8"
requests = {extras = ["socks"], version = "^2.25.1"}

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 80
target_version = ['py37', 'py38', 'py39']
include = '\.pyi?$'
exclude = '''
/(
    __pycache__
  | \.git
  | \.mypy_cache
  | \.ipynb_checkpoints
  | build
  | dist
)/
'''

[tool.isort]
line_length = 80
profile = "black"
known_first_party = ["numpy", "pandas", "pyproj", "shapely"]

[tool.mypy]
python_version = 3.8
platform = "posix"

color_output = true
pretty = true
show_column_numbers = true
strict = true

# probably redundant, but useful when switching strict to false
check_untyped_defs = true
ignore_missing_imports = true
warn_no_return = true
warn_redundant_casts = true
warn_unused_configs = true
warn_unused_ignores = true

[tool.pytest.ini_options]
addopts = "--log-level=INFO --color=yes --doctest-modules --doctest-report ndiff"
testpaths = ["traffic/data/basic/n_number.py", "tests"]
doctest_optionflags = ["NORMALIZE_WHITESPACE", "ELLIPSIS"]
