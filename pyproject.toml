[tool.poetry]
name = "traffic"
homepage = "https://github.com/xoolive/traffic/"
documentation = "https://traffic-viz.github.io/"
version = "0.0.0"
description = "A toolbox for manipulating and analysing air traffic data"
authors = ["Xavier Olive <git@xoolive.org>"]
license = "MIT"
readme = "readme.md"
classifiers = [
  "Development Status :: 5 - Production/Stable",
  "Intended Audience :: Information Technology",
  "Intended Audience :: Science/Research",
  "Operating System :: Microsoft :: Windows",
  "Operating System :: MacOS",
  "Operating System :: POSIX :: Linux",
  "Topic :: Scientific/Engineering :: Artificial Intelligence",
  "Topic :: Scientific/Engineering :: GIS",
  "Topic :: Scientific/Engineering :: Information Analysis",
  "Topic :: Scientific/Engineering :: Visualization",
  "Topic :: Software Development :: Libraries",
  "License :: OSI Approved :: MIT License",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Typing :: Typed",
]
include = [
  "license.md",
  "traffic.conf",
  "py.typed",
  ".dat",
  "*.json.*",
  ".onnx",
  "allft_fields.txt"
]

[tool.poetry-dynamic-versioning]
enable = true
bump = true
metadata = false

[tool.poetry.scripts]
traffic = 'traffic.console:main'

[tool.poetry.plugins."traffic.plugins"]
Bluesky = "traffic.plugins.bluesky"
CesiumJS = "traffic.plugins.cesiumjs"

[tool.poetry.dependencies]
python = ">=3.8,<4.0"
impunity = ">=1.0.4"
# impunity = { path = "../impunity", develop = true}
pitot = ">=0.3.1"
# pitot = { path = "../pitot", develop = true }
cartes = ">=0.7.4"
# cartes = { path = "../cartes", develop = true }
pyopensky = ">=2.0"
# pyopensky = { path = "../pyopensky", develop = true }
requests = ">=2.27"
ipywidgets = ">=7.6"
ipyleaflet = ">=0.17"
pyModeS = ">=2.17"
# pyModeS = { path = "../pyModeS", extras = ["rtlsdr"], develop = true }
openap = ">=1.1"
metar = ">=1.8"
click = ">=8.1"
typing-extensions = ">=4.2"
pyarrow = ">=11.0.0"
# onnxruntime is usually late to release, although available on conda-forge
onnxruntime = { version = ">=1.12", python = "<3.12" }
# -- Optional dependencies --
xarray = { version = ">=0.18.2", optional = true }
libarchive = { version = ">=0.4.7,<1.0.0", optional = true }
scikit-learn = { version = ">=1.0", optional = true }
textual = { version = ">=0.28", optional = true }
Flask = { version = ">=2.1.1", optional = true }
Flask-Cors = { version = ">=3.0.10", optional = true }
waitress = { version = ">=2.1.1", optional = true }
pyspark = { version = ">=3.3.0", optional = true }
pyrtlsdr = { version = "^0.2.93", optional = true }
pyb2b = { version = ">=0.1", optional = true }
# pyb2b = { path = "../pyb2b", develop = true }

[tool.poetry.extras]
full = ["xarray", "libarchive", "scikit-learn", "textual", "pyspark"]
web = ["Flask", "Flask-Cors", "waitress", "textual", "pyb2b"]
rtlsdr =  ["pyrtlsdr"]

[tool.poetry.group.dev.dependencies]
pre-commit = ">=2.13.0"
black = ">=21.6"
mypy = ">=0.981"
ruff = ">=0.0.247"
Sphinx = ">=5.1"
sphinx-rtd-theme = ">=0.5.2"
jupyter_sphinx = ">=0.3.2"
sphinx-autodoc-typehints = ">=1.17,!=1.21.4"
pytest = ">=7.1"
pytest-cov = ">=4.0"
pytest-timeout = ">=2.1"
codecov = ">=2.1.11"
ipykernel = "^6.25.0"
types-pkg-resources = ">=0.1.3"
types-requests = ">=2.25.0"
types-flask = ">=1.1.6"
types-waitress = ">=2.0.8"
requests = { extras = ["socks"], version = ">=2.27" }


[build-system]
requires = ["poetry-core>=1.0.0", "poetry-dynamic-versioning"]
build-backend = "poetry_dynamic_versioning.backend"

[tool.black]
line-length = 80
target_version = ['py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'
exclude = '''
/(
    __pycache__
  | \.git
  | \.mypy_cache
  | \.ipynb_checkpoints
  | build
  | dist
)/
'''

[tool.ruff]
select = [
  "E", "W",  # pycodestyle
  "F",  # pyflakes
  "I",  # isort
  "NPY",  # numpy
  # "PD",  # pandas
  "DTZ", # flake8-datetimez
  "RUF"
]
line-length = 80
target-version = "py38"

[tool.ruff.isort]
known-first-party = ["numpy", "pandas", "pyproj", "shapely"]

[tool.mypy]
python_version = 3.8
platform = "posix"

color_output = true
pretty = true
show_column_numbers = true
strict = true
check_untyped_defs = true
ignore_missing_imports = true
warn_no_return = true
warn_redundant_casts = true
warn_unused_configs = true
warn_unused_ignores = true

[tool.pytest.ini_options]
addopts = "--log-level=INFO --color=yes --doctest-modules --doctest-report ndiff"
testpaths = [
    "src/traffic/core/intervals.py",
    "src/traffic/core/time.py",
    "src/traffic/data/basic/",
    "tests"
]
doctest_optionflags = ["NORMALIZE_WHITESPACE", "ELLIPSIS", "NUMBER"]
