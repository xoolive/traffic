name: tests

on:
  push:
  pull_request_target:
  schedule:
    - cron: "42 7 * * 0" # Every Sunday morning when I am fast asleep :)
    # This is useful for keeping the cache fit and ready
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest # ${{ matrix.os }}
    strategy:
      matrix:
        # os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ["3.7", "3.8", "3.9"]
    env:
      PYTHON: ${{ matrix.python-version }}
    steps:
      - uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install and configure Poetry
        uses: snok/install-poetry@v1.1.6
        with:
          version: 1.1.6
          virtualenvs-in-project: true

      - name: Display Python version
        run: poetry run python -c "import sys; print(sys.version)"

      - name: Cache folder
        uses: actions/cache@v2
        id: cache-folder
        with:
          path: |
            ~/.cache/traffic/
            ~/.cache/cartes/
          key: ${{ runner.os }}-${{ matrix.python-version }}-cache_traffic

      - name: Populate first cache files
        if: steps.cache-folder.outputs.cache-hit != 'true'
        run: |
          mkdir -p ~/.cache/traffic/
          cp data/navdata/earth_*.dat ~/.cache/traffic/

      - name: Install dependencies
        run: |
          sudo apt install -y libgeos-dev libproj-dev proj-bin proj-data libarchive-dev
          poetry install -E all

      - name: Style checking
        run: |
          poetry run flake8 traffic
          poetry run isort --check-only traffic
          poetry run black --check traffic

      - name: Type checking
        run: |
          poetry run mypy traffic

      - name: Run tests
        env:
          TRAFFIC_NOPLUGIN: ""
          OPENSKY_USERNAME: ${{ secrets.OPENSKY_USERNAME }}
          OPENSKY_PASSWORD: ${{ secrets.OPENSKY_PASSWORD }}
        run: |
          poetry run pytest

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1
        if: $ {{ github.event_name != "pull_request_target" }}
        with:
          env_vars: PYTHON
